<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
<!-- Use an Atomikos DataSource to access the DB transactionally -->
<!-- NOTE: this datasource is not XA-capable! See below for XA instead -->

<!-- The following shows an alternative XA datasource setup
(illustrated with derby but works with any other XA driver as well)
-->
<!-- UNCOMMENT TO USE XA; CALL INIT TO REGISTER FOR RECOVERY AND CLOSE TO SHUTDOWN POOL! -->
<bean id="datasource"
	class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
		<property name="uniqueResourceName"><value>master</value></property>
		<property name="xaDataSourceClassName"><value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value></property>
		<property name="xaProperties">
			<props>
			   <prop key="pinGlobalTxToPhysicalConnection">true</prop>  
				<prop key="databaseName">master</prop>
				 <prop key="url">jdbc:mysql://127.0.0.1:3306/master?useUnicode=true&amp;characterEncoding=UTF-8</prop>
	             <prop key="user">hyp</prop> 
                 <prop key="password">hyp123456</prop>
			</props>
		</property>
		<property name="poolSize"><value>2</value></property>
	</bean>
<bean id="datasource2"  
	class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
		<property name="uniqueResourceName"><value>slave</value></property>
		<property name="xaDataSourceClassName"><value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value></property>
		<property name="xaProperties">
			<props>
			   <prop key="pinGlobalTxToPhysicalConnection">true</prop>  
				<prop key="databaseName">slave</prop>
				<prop key="url">jdbc:mysql://127.0.0.1:3306/slave?useUnicode=true&amp;characterEncoding=UTF-8</prop>
                <prop key="user">hyp</prop> 
                <prop key="password">hyp123456</prop>
			</props>
		</property>
		<property name="poolSize"><value>2</value></property>
	</bean>
<!-- Construct Atomikos UserTransactionManager, needed to configure Spring -->
<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
	<!--  when close is called, should we force transactions to terminate or not? -->
	<property name="forceShutdown"><value>true</value></property>
</bean>

<!-- Also use Atomikos UserTransactionImp, needed to configure Spring  -->
<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
    <property name="transactionTimeout"><value>300</value></property>
</bean>


<!-- Configure the Spring framework to use JTA transactions from Atomikos -->
<bean id="springTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">

	<property name="transactionManager"><ref bean="atomikosTransactionManager"  /></property>
	<property name="userTransaction"><ref bean="atomikosUserTransaction"  /></property>
</bean>

<!-- Configure the bank to use our datasource -->
<bean id="bankTarget" class= "jdbc.Bank">
	<property name="dataSource"><ref bean="datasource" /></property>
</bean>

<bean id="bankTarget2" class= "jdbc.Bank2">
	<property name="dataSource"><ref bean="datasource2" /></property>
</bean>
<bean id="bank" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
	<property name="transactionManager"><ref bean="springTransactionManager" /></property>
	<property name="target"><ref bean="bankTarget"  /></property>
	<property name="transactionAttributes">
		<props>
			<prop key="*">PROPAGATION_REQUIRED, -Exception</prop>
		</props>
	</property>
</bean>
<bean id="bank2" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
	<property name="transactionManager"><ref bean="springTransactionManager" /></property>
	<property name="target"><ref bean="bankTarget2"  /></property>
	<property name="transactionAttributes">
		<props>
			<prop key="*">PROPAGATION_REQUIRED, -Exception</prop>
		</props>
	</property>
</bean>
<bean id="xaService" class="jdbc.XAService"></bean>
<tx:annotation-driven transaction-manager="springTransactionManager"/>

</beans>
